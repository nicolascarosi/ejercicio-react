{"version":3,"sources":["utils/index.js","components/InputSlider.js","views/Home.js","App.js","index.js"],"names":["CurrencyFormat","value","decimals","val","parseFloat","toFixed","replace","InputSlider","title","defaultValue","minValue","maxValue","prefix","isCurrency","onChangeValue","useState","actualValue","setActualValue","finalValue","setFinalValue","useEffect","newVal","handleChangeActualValue","sliderProps","min","max","className","onChange","inputProps","decimalsLimit","intlConfig","locale","currency","maxLength","toString","length","onBlur","onValueChange","step","defaultProps","propsTotalAmountSlider","propsTermSlider","Home","totalAmount","setTotalAmount","term","setTerm","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAAaA,G,OAAiB,SAACC,GAAuB,IAAhBC,EAAe,uDAAN,EAC3C,IAAKD,EAAO,MAAO,MACnB,IAAME,EAAMC,WAAWH,GACvB,MAAO,KAAOE,EAAIE,QAAQH,GAAUI,QAAQ,0BAA2B,S,OCIrEC,EAAc,SAAC,GAAkF,IAAjFC,EAAgF,EAAhFA,MAAOC,EAAyE,EAAzEA,aAAcC,EAA2D,EAA3DA,SAAUC,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,cAE/E,EAAsCC,mBAASL,GAA/C,mBAAOM,EAAP,KAAoBC,EAApB,KACA,EAAoCF,mBAASL,GAA7C,mBAAOQ,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACN,IAAIC,EAASL,GAAe,EACxBK,EAASV,EAAUU,EAASV,EACvBU,EAASX,IAAUW,EAASX,GACrCI,EAAcO,GACdF,EAAcE,KACf,CAACL,IAEJ,IAAMM,EAA0B,SAACD,GAC7BJ,EAAeI,IAObE,EAAc,CAChBd,eACAe,IAAKd,EACLe,IAAKd,EACLe,UAAW,kBACXC,SAAUL,GAGRM,EAAa,CACfnB,aAAcO,EACda,cAAe,EACf5B,MAAOe,EACPJ,SACAkB,WAAYjB,GAAc,CAAEkB,OAAQ,QAASC,SAAU,OACvDC,UAAWtB,EAASuB,WAAWC,OAC/BC,OAnB0B,WAC1BnB,EAAeC,IAmBfmB,cAAef,EACfgB,KAAM,GAGV,OACI,sBAAKZ,UAAU,eAAf,UACI,sBAAKA,UAAU,sBAAf,UACI,sBAAMA,UAAU,eAAhB,SAAgClB,IAChC,cAAC,IAAD,eAAmBoB,OAEvB,qBAAKF,UAAU,sBAAf,SACI,cAAC,IAAD,2BAAYH,GAAZ,IAAyBtB,MAAOe,OAEpC,sBAAKU,UAAU,cAAf,UACI,gCAASb,EAAab,EAAeU,EAAU,GAAKE,EAASF,IAC7D,gCAASG,EAAab,EAAeW,EAAU,GAAKC,EAASD,WAM7EJ,EAAYgC,aAAe,CACvB/B,MAAO,GACPC,aAAc,EACdC,SAAU,EACVC,SAAU,GACVC,OAAQ,GACRC,YAAY,EACZC,cAAe,cAGJP,QCtETiC,EAAyB,CAC3BhC,MAAO,cACPE,SAAU,IACVC,SAAU,IACVE,YAAY,EACZD,OAAQ,MAGN6B,EAAkB,CACpBjC,MAAO,QACPE,SAAU,EACVC,SAAU,IA6BC+B,EA1BF,WAET,MAAsC3B,mBAASyB,EAAuB9B,UAAtE,mBAAOiC,EAAP,KAAoBC,EAApB,KACA,EAAwB7B,mBAAS0B,EAAgB/B,UAAjD,mBAAOmC,EAAP,KAAaC,EAAb,KAIA,OACI,qBAAKpB,UAAU,iBAAf,SACI,sBAAKA,UAAU,4BAAf,UACI,yDACA,cAAC,EAAD,2BAAiBc,GAAjB,IAAyC1B,cAAe,SAACX,GAAD,OAASyC,EAAezC,OAChF,cAAC,EAAD,2BAAiBsC,GAAjB,IAAkC3B,cAAe,SAACX,GAAD,OAAS2C,EAAQ3C,OAClE,sBAAKuB,UAAU,uBAAf,UACI,sDACA,iCAAS1B,EAVU2C,EAAcE,QAYrC,sBAAKnB,UAAU,aAAf,UACI,wBAAQA,UAAU,2BAAlB,kCACA,wBAAQA,UAAU,iCAAlB,4CC9BLqB,MANf,WACE,OACE,cAAC,EAAD,KCCJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.84193887.chunk.js","sourcesContent":["export const CurrencyFormat = (value, decimals=2) => {\r\n    if (!value) return '$ 0';\r\n    const val = parseFloat(value);\r\n    return '$ ' + val.toFixed(decimals).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nimport CurrencyInput from 'react-currency-input-field';\r\nimport Slider from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\nimport {CurrencyFormat} from '../utils';\r\n\r\nconst InputSlider = ({title, defaultValue, minValue, maxValue, prefix, isCurrency, onChangeValue}) => {\r\n\r\n    const [actualValue, setActualValue] = useState(minValue);\r\n    const [finalValue, setFinalValue] = useState(minValue);\r\n\r\n    useEffect(() => {\r\n        let newVal = actualValue || 0;\r\n        if (newVal > maxValue) newVal = maxValue\r\n        else if (newVal < minValue) newVal = minValue\r\n        onChangeValue(newVal)\r\n        setFinalValue(newVal)\r\n    }, [actualValue])\r\n\r\n    const handleChangeActualValue = (newVal) => {\r\n        setActualValue(newVal)\r\n    }\r\n\r\n    const handleBlurActualValue = () => {\r\n        setActualValue(finalValue)\r\n    }\r\n\r\n    const sliderProps = {\r\n        defaultValue,\r\n        min: minValue,\r\n        max: maxValue,\r\n        className: 'material-slider',\r\n        onChange: handleChangeActualValue\r\n    }\r\n\r\n    const inputProps = {\r\n        defaultValue: actualValue,\r\n        decimalsLimit: 0,\r\n        value: actualValue,\r\n        prefix,\r\n        intlConfig: isCurrency && { locale: 'en-US', currency: 'USD' },\r\n        maxLength: maxValue.toString().length,\r\n        onBlur: handleBlurActualValue,\r\n        onValueChange: handleChangeActualValue,\r\n        step: 1,\r\n    }\r\n\r\n    return (\r\n        <div className=\"input-slider\">\r\n            <div className=\"input-slider-header\">\r\n                <span className=\"slider-title\">{title}</span>\r\n                <CurrencyInput {...inputProps}/>\r\n            </div>\r\n            <div className=\"input-slider-footer\">\r\n                <Slider {...sliderProps} value={actualValue}/>\r\n            </div>\r\n            <div className=\"min-and-max\">\r\n                <small>{(isCurrency ? CurrencyFormat(minValue, 0) : prefix + minValue)}</small>\r\n                <small>{(isCurrency ? CurrencyFormat(maxValue, 0) : prefix + maxValue)}</small>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nInputSlider.defaultProps = {\r\n    title: '', \r\n    defaultValue: 0, \r\n    minValue: 0, \r\n    maxValue: 10,\r\n    prefix: '',\r\n    isCurrency: false,\r\n    onChangeValue: () => {},\r\n}\r\n\r\nexport default InputSlider;","import React, {useState} from 'react';\n\nimport InputSlider from '../components/InputSlider';\nimport {CurrencyFormat} from '../utils';\n\nconst propsTotalAmountSlider = {\n    title: 'Monto total', \n    minValue: 5000, \n    maxValue: 50000,\n    isCurrency: true,\n    prefix: '$ '\n}\n\nconst propsTermSlider = {\n    title: 'Plazo', \n    minValue: 3, \n    maxValue: 24\n}\n\nconst Home = () => {\n\n    const [totalAmount, setTotalAmount] = useState(propsTotalAmountSlider.minValue);\n    const [term, setTerm] = useState(propsTermSlider.minValue);\n\n    const getFeesPricePerMonth = () => totalAmount / term;\n\n    return (\n        <div className=\"main-container\">\n            <div className=\"box-container medium blue\">\n                <h2>Simulá tu crédito</h2>\n                <InputSlider {...propsTotalAmountSlider} onChangeValue={(val) => setTotalAmount(val)}></InputSlider>\n                <InputSlider {...propsTermSlider} onChangeValue={(val) => setTerm(val)}></InputSlider>\n                <div className=\"info-box darker-blue\">\n                    <span>Cuota fija por mes</span>\n                    <strong>{CurrencyFormat(getFeesPricePerMonth())}</strong>\n                </div>\n                <div className=\"box-footer\">\n                    <button className=\"btn btn-aqua-green block\">Obtené crédito</button>\n                    <button className=\"btn btn-light-blue block small\">Ver detalle de cuotas</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;\n","import Home from './views/Home';\r\n\r\nfunction App() {\r\n  return (\r\n    <Home />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/styles/general.scss';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}